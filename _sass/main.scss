@import "../utilities/variables";

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}


@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties {
    #{$property}: $min-value;
  }

  @media screen and (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
    }
  }

  @media screen and (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

html, body {
  height: 100%;
  width: 100%;
  font-family: "Open Sans",sans-serif;
  font-weight: 300;
  background-color: #000022;
  padding: 0px;
  margin: 0px;
}

h1, h2, h3, h4 {
  color: #fff;
}

h3{
  @include fluid-type(font-size, 600px, 1200px, 4vw, 2vw);
  color: #FFFF5F;
}

h4{
  color: #C1C181;
}

b {
  font-weight: bold;
}


h1 {
  padding-left: 10px;
}

h3, h4 {
  @include fluid-type(font-size, 600px, 1200px, 4vw, 1vw);
  text-align: left;
  margin: 5px 0px;
}

i {
  @include fluid-type(font-size, 600px, 1200px, 4vw, 1vw);
  color: #fff;
  
}

tr {
  color: #fff;
}

p {
  @include fluid-type(font-size, 600px, 1200px, 4vw, 1vw);
  color: #fff;
}

li {
  @include fluid-type(font-size, 600px, 1200px, 4vw, 1vw);
  color: #fff;
}

ul {
  text-align: center;
  width: 50px;
} 

a {
  @include fluid-type(font-size, 600px, 1200px, 4vw, 1vw);
  color: #FFFF5F;
}

a::before{
  color: #FFFF5F;
}

a::after{
  color: #C1C181;
}

.float-left {
  float: left;
}

.float-right {
  float: right;
}

